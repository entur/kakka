#
# Licensed under the EUPL, Version 1.2 or â€“ as soon they will be approved by
# the European Commission - subsequent versions of the EUPL (the "Licence");
# You may not use this work except in compliance with the Licence.
# You may obtain a copy of the Licence at:
#
#   https://joinup.ec.europa.eu/software/page/eupl
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the Licence is distributed on an "AS IS" basis,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the Licence for the specific language governing permissions and
# limitations under the Licence.
#
#
# the options from org.apache.camel.spring.boot.CamelConfigurationProperties can be configured here
camel.springboot.name=Kakka
camel.servlet.mapping.context-path=/services/*
blobstore.gcs.container.name=internal
blobstore.gcs.target-container.name=internal
# logging settings
logging.config=classpath:logback-test.xml
logging.level.root=INFO
#logging.level.no.entur=DEBUG
logging.level.WireMock=WARN
spring.profiles.active=in-memory-blobstore,test
server.port=28081
logging.trace.enabled=true
organisations.api.url=http://localhost/services/organisations/
endpoints.jmx.enabled=false
endpoints.jolokia.enabled=false
spring.datasource.platform=h2
tiamat.url=http:tiamat:1888
tiamat-exporter.url=http:tiamat-exporter:1888
elasticsearch.scratch.url=http:es-scratch:9200
kartverket.username=erlendnils1
kartverket.password=
geocoder.autoStartup=true
geocoder.retry.delay=1
#OAuth2 Resource Server
kakka.oauth2.resourceserver.auth0.ror.jwt.audience=https://notUsed
kakka.oauth2.resourceserver.auth0.ror.claim.namespace=https://notUsed
#OAuth2 Client
spring.security.oauth2.client.registration.kakka.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.kakka.client-id=notUsed
spring.security.oauth2.client.registration.kakka.client-secret=notUsed
spring.security.oauth2.client.provider.kakka.token-uri=https://notUsed
kakka.oauth2.client.audience=https://notUsed
tiamat.export.autoStartup=false
spring.cloud.gcp.project-id=test
spring.cloud.gcp.pubsub.project-id=test
# Path to credential for accessing the Google Cloud project, using the Spring resource syntax (prefixed with file:)
#spring.cloud.gcp.pubsub.credentials.location=file:/path/to/json/file
# if this property is present then the client library connects to the PubSub emulator instead of Google Cloud
spring.cloud.gcp.pubsub.emulatorHost=localhost:8089
# number of parallel pullers for a given Subscriber. Constrained by the number of threads in the executor.
spring.cloud.gcp.pubsub.subscriber.parallel-pull-count=1
# number of executor threads (shared by all subscribers)
spring.cloud.gcp.pubsub.subscriber.executor-threads=30
# the client library will automatically extend the ack deadline up to this limit.
spring.cloud.gcp.pubsub.subscriber.max-ack-extension-period=36000
# number of threads performing ack deadline extension  (shared by all subscribers). The default value is 5
#entur.pubsub.subscriber.system-threads=5
# path to Google PubSub emulator
# default path if the property is not set (retrieved as a Maven dependency):
#entur.pubsub.emulator.path=target/pubsub-emulator/pubsub-emulator-0.1-SNAPSHOT.jar
spring.flyway.enabled=false
tiamat.exports.config.path=tiamat-exports.yml
kingu.incoming.camel.route.topic.netex.export=entur-google-pubsub:TiamatExportIncomingQueue
kingu.outgoing.camel.route.topic.netex.export=entur-google-pubsub:TiamatExportOutgoingQueue
blobstore.gcs.source.container.name=kingu-dev

camel.component.kubernetes.cluster.service.enabled=false
camel.component.kubernetes.cluster.service.cluster-labels[app]=kakka
camel.cluster.file.enabled=true
camel.cluster.file.id=${random.uuid}
camel.cluster.file.root=${java.io.tmpdir}/camel/master
