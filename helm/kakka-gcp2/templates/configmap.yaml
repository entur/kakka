apiVersion: v1
data:
  application.properties: |-
    # Spring
    spring.profiles.active=gcs-blobstore
    spring.main.sources=no.entur.kakka
    spring.main.allow-bean-definition-overriding=true
    spring.datasource.url=jdbc:postgresql://localhost:5432/kakka
    spring.datasource.driver-class-name=org.postgresql.Driver
    spring.datasource.username=kakka
    spring.datasource.password=${PGPASSWORD}
    spring.jmx.unique-names=true
    ## Flyway configuration
    spring.flyway.baseline-description=<< Flyway Baseline >>
    spring.flyway.baseline-on-migrate=true
    spring.flyway.baseline-version=1
    spring.flyway.table=flyway_schema_history
    #spring.flyway.enabled=true
    server.port=8080
    camel.springboot.name=kakka
    camel.servlet.mapping.context-path=/services/*
    camel.cluster.kubernetes.enabled=true
    camel.cluster.kubernetes.cluster-labels[app]=kakka
    camel.cluster.kubernetes.config-map-name=kakka-leaders

    # Tiamat
    tiamat.geocoder.export.autoStartup=true
    tiamat.poi.update.enabled=false
    tiamat.url={{ .Values.configMap.tiamatUrl }}
    tiamat-exporter.url= {{ .Values.configMap.tiamatExporterUrl }}
    tiamat.publish.export.cron.schedule={{.Values.configMap.tiamatExportSchedule}}
    tiamat.publish.export.cron.schedule.mid.day={{.Values.configMap.tiamatExportScheduleMidDay}}
    tiamat.publish.localworkdir=/tmp/tiamat/publish
    tiamat.geocoder.export.mid.day.autoStartup=true
    tiamat.geocoder.export.cron.schedule={{.Values.configMap.gecoderExportSchedule}}
    tiamat.geocoder.export.cron.schedule.mid.day={{.Values.configMap.gecoderExportScheduleMidDay}}
    tiamat.export.max.retries=720
    tiamat.export.retry.delay=25000
    tiamat.change.log.download.directory=/tmp/tiamat/changelog
    tiamat.administrative.units.update.directory=/tmp/tiamat/orgReg/adminUnits
    tiamat.neighbouring.countries.update.directory=/tmp/tiamat/countries
    tiamat.tariffzones.update.directory=/tmp/tiamat/tariffZones/
    tiamat.publish.export={{.Values.configMap.tiamatExport}}
    tiamat.poi.update.directory=/tmp/tiamat/poi/update
    tiamat.exports.config.path=/etc/tiamat-config/tiamat-exports.yml
    tiamat.export.autoStartup = false
    kingu.export.autoStartup = true
    kingu.export.mid.day.autoStartup =true

    # Kartverket
    kartverket.download.directory=/tmp/tiamat/files/kartverket
    kartverket.admin.units.archive.filename=county/Basisdata_0000_Norge_25833_Fylker_SOSI.zip
    kartverket.admin.units.filename=Basisdata_0000_Norge_25833_Fylker_SOSI.sos
    kartverket.address.download.autoStartup=true
    kartverket.addresses.download.cron.schedule=0+0+11+?+*+MON-FRI

    # Geocoder
    geocoder.max.retries=600
    geocoder.place.type.whitelist={{ .Values.configMap.pelias.geocoderPlaceTypeWhitelist }}
    #geocoder.autoStartup=true
    elasticsearch.scratch.deployment.name=kakka.remote.kubernetes.geocoder.cronjob
    elasticsearch.scratch.upload.job.enabled={{ .Values.configMap.elasticsearchUploadJobEnabled }}
    elasticsearch.scratch.url={{ .Values.configMap.elasticsearchUrl }}
    kakka.remote.kubernetes.cronjob=es-data-upload-job
    kakka.remote.kubernetes.geocoder.cronjob={{ .Values.configMap.geoCoderCronJob }}
    # Pelias
    pelias.gtfs.stop.place.enabled= {{ .Values.configMap.pelias.gtfs }}
    pelias.gos.include=true
    pelias.place.boost= {{.Values.configMap.pelias.placeBoost}}
    pelias.stop.place.boost.config={{.Values.configMap.pelias.boostConfig}}
    pelias.gos.boost.factor= {{.Values.configMap.pelias.boostFactor }}
    pelias.address.boost={{.Values.configMap.pelias.addressBoost}}
    pelias.address.street.boost={{.Values.configMap.pelias.streetBoost}}
    pelias.gtfs.stopplace.boost={{.Values.configMap.pelias.stopPlaceBoost}}
    pelias.download.directory=/tmp/tiamat/pelias
    # Include POIs from tiamat netex file
    pelias.poi.include={{.Values.configMap.pelias.poiInclude}}

    # Blob store
    blobstore.gcs.project.id={{ .Values.configMap.blobstoreProjectId }}
    blobstore.gcs.target-project.id={{ .Values.configMap.blobstoreTargetProjectId }}
    blobstore.gcs.container.name={{ .Values.configMap.gcsBlobstore }}
    blobstore.gcs.target-container.name={{ .Values.configMap.gcsTargetBlobstore }}
    blobstore.gcs.source.container.name={{ .Values.configMap.gcsSourceBlobstore }}

    # OAuth2 Resource Server
    spring.security.oauth2.resourceserver.jwt.issuer-uri={{ .Values.configMap.auth0.ror.url }}
    kakka.oauth2.resourceserver.auth0.ror.jwt.audience={{ .Values.configMap.auth0.ror.audience }}
    kakka.oauth2.resourceserver.auth0.ror.claim.namespace=https://ror.entur.io/

    # OAuth2 Client
    spring.security.oauth2.client.registration.kakka.authorization-grant-type=client_credentials
    spring.security.oauth2.client.registration.kakka.client-id={{ .Values.configMap.oauth2.client.id }}
    spring.security.oauth2.client.provider.kakka.token-uri={{ .Values.configMap.oauth2.client.url }}
    kakka.oauth2.client.audience={{ .Values.configMap.oauth2.client.audience }}

    # PubSub
    spring.cloud.gcp.pubsub.project-id={{ .Values.configMap.pubsubProjectId }}
    spring.cloud.gcp.pubsub.subscriber.parallel-pull-count=1
    spring.cloud.gcp.pubsub.subscriber.executor-threads=30
    spring.cloud.gcp.pubsub.subscriber.max-ack-extension-period=36000
    entur.pubsub.subscriber.autocreate=false
    kingu.incoming.camel.route.topic.netex.export=entur-google-pubsub:KinguExportIncomingQueue
    kingu.outgoing.camel.route.topic.netex.export=entur-google-pubsub:KinguExportOutgoingQueue

    geocoder.smoke.test.camel.route.subscription=entur-google-pubsub:GeoCoderSmokeTestQueue
    es.build.job.camel.route.subscription=entur-google-pubsub:EsBuildJobQueue


    # Actuator
    management.server.port=9001
    management.endpoints.enabled-by-default=false
    management.endpoint.info.enabled=true
    management.endpoint.health.enabled=true
    management.endpoint.prometheus.enabled=true
    management.endpoints.web.exposure.include=info,health,prometheus

    #logging
    logging.level.com.conveyal=WARN



    # Other
    quartz.enabled=true
    organisations.api.url= {{ .Values.configMap.babaUrl }}
    osmpoifilter.priority.default={{.Values.configMap.pelias.osmPoiFilterDefaultPriority}}
    kakka.remote.kubernetes.namespace = {{ .Release.Namespace }}
    # Convert POIs directly from osm file
    osm.poi.update.enabled={{.Values.configMap.poiUpdateEnabled}}
    # TariffZone Import valid providers/authority
    tariff.zone.providers=AKT,ATB,BRA,FIN,HED,INN,KOL,MOR,NOR,OPP,OST,RUT,SKY,SOF,TRO,VKT,VOT
    fetch.osm.cron.schedule=0+0+19+?+*+MON-FRI

kind: ConfigMap
metadata:
  name: {{ template "kakka.name" . }}-config
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels" . | indent 4 }}
