<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <parent>
        <groupId>org.entur.ror</groupId>
        <artifactId>superpom</artifactId>
        <version>2.10</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>

    <groupId>no.entur.kakka</groupId>
    <artifactId>kakka</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <name>kakka</name>
    <description>Geocoder builder</description>

    <scm>
        <connection>scm:git:ssh://git@github.com:entur/kakka.git</connection>
        <developerConnection>scm:git:ssh://git@github.com:entur/kakka.git</developerConnection>
    </scm>
    <properties>
        <java.version>21</java.version>
        <camel.version>4.3.0</camel.version>

        <wololo.version>0.14.3</wololo.version>
        <jskdata.version>1.0.15</jskdata.version>

        <auth0.version>1.26.0</auth0.version>
        <netex-java-model.version>2.0.14</netex-java-model.version>
        <entur.helpers.version>2.11</entur.helpers.version>
        <guava.version>31.1-jre</guava.version>

        <entur.google.pubsub.emulator.download.skip>false</entur.google.pubsub.emulator.download.skip>
        <commons-fileupload.version>1.4</commons-fileupload.version>

        <geotools.version>20.3</geotools.version>
        <!-- HSQLDB version compatible with GeoTools 20.3 -->
        <hsqldb.version>2.4.1</hsqldb.version>

        <geojson-jackson.version>1.8.1</geojson-jackson.version>
        <gtfs-lib.version>3.3.0</gtfs-lib.version>
        <beanio.version>2.1.0</beanio.version>
        <osmpbf.version>1.3.3-entur</osmpbf.version>
        <commons-text.version>1.8</commons-text.version>
        <commons-io.version>2.15.1</commons-io.version>
        <sosi-reader-impl.version>1.26</sosi-reader-impl.version>
        <osmosis-osm-binary.version>0.47.3</osmosis-osm-binary.version>
        <kubernetes-server-mock.version>6.10.0</kubernetes-server-mock.version>
        <argLine/>
        <spring-webmvc.version>5.3.28</spring-webmvc.version>
    </properties>

    <repositories>
        <repository>
            <id>ECC</id>
            <url>https://github.com/ElectronicChartCentre/ecc-mvn-repo/raw/master/releases</url>
        </repository>
    </repositories>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.camel.springboot</groupId>
                <artifactId>camel-spring-boot-dependencies</artifactId>
                <version>${camel.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>

        <!-- Entur -->
        <dependency>
            <groupId>org.entur.ror.helpers</groupId>
            <artifactId>entur-google-pubsub</artifactId>
            <version>${entur.helpers.version}</version>
        </dependency>
        <dependency>
            <groupId>org.entur.ror.helpers</groupId>
            <artifactId>gcp-storage</artifactId>
            <version>${entur.helpers.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-codec-http2</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.protobuf</groupId>
                    <artifactId>protobuf-lite</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.entur.ror.helpers</groupId>
            <artifactId>organisation</artifactId>
            <version>${entur.helpers.version}</version>
        </dependency>
        <dependency>
            <groupId>org.entur</groupId>
            <artifactId>netex-java-model</artifactId>
            <version>${netex-java-model.version}</version>
        </dependency>
        <dependency>
            <groupId>org.entur.ror.helpers</groupId>
            <artifactId>oauth2</artifactId>
            <version>${entur.helpers.version}</version>
        </dependency>
        <dependency>
            <groupId>org.entur.ror.helpers</groupId>
            <artifactId>slack</artifactId>
            <version>${entur.helpers.version}</version>
        </dependency>

        <!-- Spring -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- temporary Downgrade dependency -->
        <!--
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring-webmvc.version}</version>
        </dependency>
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jersey</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!--Used by Spring Actuator to expose metrics to Prometheus-->
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>

        <!-- Camel -->
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-servlet-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-http-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-quartz-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-jackson-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-jaxb-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-jsonpath-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-openapi-java-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-sql-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-master-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-kubernetes-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-file-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-google-pubsub-starter</artifactId>
        </dependency>

        <!-- Other -->
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-referencing</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-api</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.geotools</groupId>
            <artifactId>gt-geojson</artifactId>
            <version>${geotools.version}</version>
        </dependency>
        <!--  Using de.grundid.opendatalab geojson for legacy reasons. would be better to swtich to org.wololo-->
        <dependency>
            <groupId>de.grundid.opendatalab</groupId>
            <artifactId>geojson-jackson</artifactId>
            <version>${geojson-jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.conveyal</groupId>
            <artifactId>gtfs-lib</artifactId>
            <version>${gtfs-lib.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-simple</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
        </dependency>
        <!-- logback core requires janino -->
        <dependency>
            <groupId>org.codehaus.janino</groupId>
            <artifactId>janino</artifactId>
        </dependency>
        <dependency>
            <groupId>org.beanio</groupId>
            <artifactId>beanio</artifactId>
            <version>${beanio.version}</version>
        </dependency>
        <!--
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        -->
        <dependency>
            <groupId>org.apache.httpcomponents.client5</groupId>
            <artifactId>httpclient5</artifactId>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>crosby.binary</groupId>
            <artifactId>osmpbf</artifactId>
            <version>${osmpbf.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.google.protobuf</groupId>
                    <artifactId>protobuf-java</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
            <version>${commons-text.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>
        <dependency>
            <groupId>no.jskdata</groupId>
            <artifactId>jskdata</artifactId>
            <version>${jskdata.version}</version>
        </dependency>
        <dependency>
            <groupId>no.vegvesen.nvdb</groupId>
            <artifactId>sosi-reader-impl</artifactId>
            <version>${sosi-reader-impl.version}</version>
        </dependency>
        <dependency>
            <groupId>org.wololo</groupId>
            <artifactId>jts2geojson</artifactId>
            <version>${wololo.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
        <dependency>
            <groupId>org.openstreetmap.osmosis</groupId>
            <artifactId>osmosis-osm-binary</artifactId>
            <version>${osmosis-osm-binary.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>${commons-fileupload.version}</version>
        </dependency>

        <!-- testing -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test-spring-junit5</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-server-mock</artifactId>
            <version>${kubernetes-server-mock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>kubernetes-client</artifactId>
            <version>${kubernetes-server-mock.version}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-migrationsupport</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>@{argLine} -Xms500m -Xmx500m -Xss256k</argLine>
                    <systemPropertyVariables combine.children="override">
                        <spring.output.ansi.enabled>ALWAYS</spring.output.ansi.enabled>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
